{
  "launch": {
    // All the Puppeteer PuppeteerLaunchOptions values
  },
  "content": {
    // All the Puppeteer WaitForOptions values:

    /**
    * Maximum wait time in milliseconds. Pass 0 to disable the timeout.
    *
    * The default value can be changed by using the
    * {@link Page.setDefaultTimeout} or {@link Page.setDefaultNavigationTimeout}
    * methods.
    *
    * @defaultValue `30000`
    */
    "timeout": 30000,
    /**
    * Valid values 'load' | 'domcontentloaded' | 'networkidle0' | 'networkidle2'
    * 
    * Can be a string or an array of string of the valid values
    */
    "waitUntil": ""
  },
  "pdf": {
    // All the Puppeteer PDFOptions values:

    /**
    * Scales the rendering of the web page. Amount must be between `0.1` and `2`.
    * @defaultValue 1
    */
    "scale": 1,
    /**
    * Whether to show the header and footer.
    * @defaultValue false
    */
    "displayHeaderFooter": false,
    /**
    * HTML template for the print header. Should be valid HTML with the following
    * classes used to inject values into them:
    *
    * - `date` formatted print date
    *
    * - `title` document title
    *
    * - `url` document location
    *
    * - `pageNumber` current page number
    *
    * - `totalPages` total pages in the document
    */
    "headerTemplate": "",
    /**
    * HTML template for the print footer. Has the same constraints and support
    * for special classes as {@link PDFOptions.headerTemplate}.
    */
    "footerTemplate": "",
    /**
    * Set to `true` to print background graphics.
    * @defaultValue false
    */
    "printBackground": false,
    /**
    * Whether to print in landscape orientation.
    * @defaultValue = false
    */
    "landscape": false,
    /**
    * Paper ranges to print, e.g. `1-5, 8, 11-13`.
    * @defaultValue The empty string, which means all pages are printed.
    */
    "pageRanges": "",
    /**
    * @remarks
    * If set, this takes priority over the `width` and `height` options.
    * @defaultValue `letter`.
    */
    "format": "letter",
    /**
    * Sets the width of paper. You can pass in a number or a string with a unit.
    */
    "width": "",
    /**
    * Sets the height of paper. You can pass in a number or a string with a unit.
    */
    "height": "",
    /**
    * Give any CSS `@page` size declared in the page priority over what is
    * declared in the `width` or `height` or `format` option.
    * @defaultValue `false`, which will scale the content to fit the paper size.
    */
    "preferCSSPageSize": false,
    /**
    * Set the PDF margins.
    * @defaultValue no margins are set.
    */
    "margin": {
      /**
      * Sets the top margin of paper. You can pass in a number or a string with a unit.
      */
      "top": 0,
      /**
      * Sets the bottom margin of paper. You can pass in a number or a string with a unit.
      */
      "bottom": 0,
      /**
      * Sets the left margin of paper. You can pass in a number or a string with a unit.
      */
      "left": 0,
      /**
      * Sets the right margin of paper. You can pass in a number or a string with a unit.
      */
      "right": 0
    }, 
    /**
    * The path to save the file to.
    *
    * @remarks
    *
    * If the path is relative, it's resolved relative to the current working directory.
    *
    * @defaultValue the empty string, which means the PDF will not be written to disk.
    */
    // Overrided by the program
    // "path": "",
    /**
    * Hides default white background and allows generating pdfs with transparency.
    * @defaultValue false
    */
    "omitBackground": false,
    /**
    * Timeout in milliseconds. Pass `0` to disable timeout.
    * @defaultValue 30000
    */
    "timeout": 30000
  }
}